[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nemo-mqtt-plugin"
version = "1.0.0"
description = "MQTT integration plugin for NEMO tool usage events"
readme = "README.md"
license = "MIT"
authors = [
    {name = "SNF-Root", email = "alexdenton998@gmail.com"}
]
maintainers = [
    {name = "SNF-Root", email = "alexdenton998@gmail.com"}
]
keywords = ["nemo", "mqtt", "django", "plugin", "iot", "real-time", "monitoring"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.8"
dependencies = [
    "paho-mqtt>=1.6.1",
    "Django>=3.2",
    "redis>=4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-django>=4.0",
    "pytest-cov>=3.0",
    "black>=22.0",
    "flake8>=4.0",
    "isort>=5.0",
    "mypy>=0.900",
]
test = [
    "pytest>=6.0",
    "pytest-django>=4.0",
    "pytest-cov>=3.0",
]

[project.urls]
Homepage = "https://github.com/SNF-Root/NEMO-MQTT-Plugin"
Documentation = "https://github.com/SNF-Root/NEMO-MQTT-Plugin#readme"
Repository = "https://github.com/SNF-Root/NEMO-MQTT-Plugin.git"
"Bug Tracker" = "https://github.com/SNF-Root/NEMO-MQTT-Plugin/issues"
Changelog = "https://github.com/SNF-Root/NEMO-MQTT-Plugin/blob/main/CHANGELOG.md"

[project.scripts]
nemo-mqtt-setup = "NEMO_mqtt.management.commands.setup_nemo_integration:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["NEMO_mqtt*"]

[tool.setuptools.package-data]
NEMO_mqtt = [
    "templates/**/*",
    "migrations/**/*",
    "*.txt",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | tests
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "NEMO_mqtt"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.test_settings"
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short --cov=NEMO_mqtt --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["NEMO_mqtt"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "paho.mqtt.*",
    "redis.*",
]
ignore_missing_imports = true
